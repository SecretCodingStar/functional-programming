{"version":3,"sources":["promise-gen-functional.js"],"names":[],"mappings":"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","file":"promise-gen-functional-compiled.js","sourcesContent":["// give credit to http://www.html5rocks.com/en/tutorials/es6/promises/\n\"use strict\";\nfunction spawn(generatorFunc) {\n    function continuer(verb, arg) {\n        var result;\n        try {\n            result = generator[verb](arg);\n        } catch (err) {\n            return Promise.reject(err);\n        }\n        if (result.done) {\n            return result.value;\n        } else {\n            return Promise.resolve(result.value).then(onFulfilled, onRejected);\n        }\n    }\n    var generator = generatorFunc();\n    var onFulfilled = continuer.bind(continuer, \"next\");\n    var onRejected = continuer.bind(continuer, \"throw\");\n    return onFulfilled();\n}\nconst HOST = 'http://localhost:8000';\n\nvar getJSON = function (url) {\n    return new Promise(function(resolve, reject) {\n        var req = new XMLHttpRequest();\n        req.responseType = 'json';\n        req.open('GET', url);\n        req.onload = function() {\n            if(req.status == 200) {\n                console.log(req.response);\n                resolve(req.response);\n            }\n            else {\n                reject(Error(req.statusText));\n            }\n        };\n        req.onerror = function () {\n            reject(Error(\"IO Error\"));\n        };\n        req.send();\n    });\n};\n\nvar forkJoin = function(join, func1, func2){\n    return function(val) {\n        return join(func1(val), func2(val));\n    };\n};\nvar hide = function (id) {$('#' + id).hide()};\n\nvar populateRow = function (columns) {\n    var cell_t = _.template('<td><%= a %></td>');\n    var row_t  = _.template('<tr><%= a %></tr>');\n    var obj = function(a) {\n        return {'a': a};\n    };\n    var row = R.compose(row_t, obj, R.join(''), R.map(cell_t), R.map(obj));\n    return row(columns);\n};\n\nvar appendToTable = function (elementId) {\n    return function (row) {\n        $('#' + elementId + ' tr:last').after(row);\n        return $('#' + elementId + ' tr').length - 1; // exclude header\n    };\n};\n\nvar average = R.compose(Math.ceil, forkJoin(R.divide, R.sum, R.length));\n\nspawn(function *() {\n    try {\n        hide('spinner');\n\n        // 'yield' effectively does an async wait,\n        // returning the result of the promise\n        // Map our array of student urls to\n        let students = yield getJSON(HOST + '/students');\n        students = R.compose(\n                         R.sortBy(R.prop('ssn')),\n                         R.filter(function (s) { return s.address.country === 'US'}))(students);\n\n        for (let student of students) {  //must use for loop you cannot use yield within another function\n            // Wait for each student grade to be ready, then add it to the page\n            let grade = average(yield getJSON(HOST + '/grades?ssn=' + student.ssn));\n            const data = R.merge(student, {'grade': grade});\n            var unsafeIO = IO.of(data).map(R.props(['ssn', 'firstname', 'lastname', 'grade']))\n                    .map(populateRow).map(appendToTable('studentRoster'));\n            unsafeIO.run();\n        }\n    }\n    catch (err) {\n        // try/catch just works, rejected promises are thrown here\n        alert('error occurred' + err);\n    }\n});"]}