{"version":3,"sources":["sinon-qunit-1.0.0.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkCA,KAAK,CAAC,MAAM,CAAC,IAAI,GAAG,UAAU,GAAG,EAAE;AAC/B,SAAK,CAAC,EAAE,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;CACxB,CAAC;;AAEF,KAAK,CAAC,MAAM,CAAC,IAAI,GAAG,UAAU,SAAS,EAAE;AACrC,SAAK,CAAC,EAAE,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC;CAC7B,CAAC;;AAEF,KAAK,CAAC,MAAM,GAAG;AACX,kBAAc,EAAE,IAAI;AACpB,cAAU,EAAE,IAAI;AAChB,cAAU,EAAE,CAAC,KAAK,EAAE,MAAM,EAAE,MAAM,EAAE,OAAO,EAAE,SAAS,CAAC;AACvD,iBAAa,EAAE,IAAI;AACnB,iBAAa,EAAE,KAAK;CACvB,CAAC;;AAEF,AAAC,CAAA,UAAU,MAAM,EAAE;AACf,QAAI,KAAK,GAAG,KAAK,CAAC,IAAI,CAAC;;AAEvB,SAAK,CAAC,IAAI,GAAG,MAAM,CAAC,IAAI,GAAG,UAAU,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,KAAK,EAAE;AACtE,YAAI,SAAS,CAAC,MAAM,KAAK,CAAC,EAAE;AACxB,oBAAQ,GAAG,QAAQ,CAAC;AACpB,oBAAQ,GAAG,IAAI,CAAC;SACnB;;AAED,eAAO,KAAK,CAAC,QAAQ,EAAE,QAAQ,EAAE,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAE,KAAK,CAAC,CAAC;KACjE,CAAC;CACL,CAAA,WAAM,CAAE","file":"sinon-qunit-1.0.0-compiled.js","sourcesContent":["/**\n * sinon-qunit 1.0.0, 2010/12/09\n *\n * @author Christian Johansen (christian@cjohansen.no)\n *\n * (The BSD License)\n * \n * Copyright (c) 2010-2011, Christian Johansen, christian@cjohansen.no\n * All rights reserved.\n * \n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n * \n *     * Redistributions of source code must retain the above copyright notice,\n *       this list of conditions and the following disclaimer.\n *     * Redistributions in binary form must reproduce the above copyright notice,\n *       this list of conditions and the following disclaimer in the documentation\n *       and/or other materials provided with the distribution.\n *     * Neither the name of Christian Johansen nor the names of his contributors\n *       may be used to endorse or promote products derived from this software\n *       without specific prior written permission.\n * \n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE\n * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\n * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\n * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\n * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\n * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\n * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n/*global sinon, QUnit, test*/\nsinon.assert.fail = function (msg) {\n    QUnit.ok(false, msg);\n};\n\nsinon.assert.pass = function (assertion) {\n    QUnit.ok(true, assertion);\n};\n\nsinon.config = {\n    injectIntoThis: true,\n    injectInto: null,\n    properties: [\"spy\", \"stub\", \"mock\", \"clock\", \"sandbox\"],\n    useFakeTimers: true,\n    useFakeServer: false\n};\n\n(function (global) {\n    var qTest = QUnit.test;\n    \n    QUnit.test = global.test = function (testName, expected, callback, async) {\n        if (arguments.length === 2) {\n            callback = expected;\n            expected = null;\n        }\n\n        return qTest(testName, expected, sinon.test(callback), async);\n    };\n}(this));\n"]}