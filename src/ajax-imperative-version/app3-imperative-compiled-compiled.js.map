{"version":3,"sources":["app3-imperative-compiled.js"],"names":[],"mappings":"AAAA,YAAY,CAAC;;AAEb,IAAI,IAAI,GAAG,uBAAuB,CAAC;;AAEnC,IAAI,OAAO,GAAG,SAAS,OAAO,CAAC,GAAG,EAAE,OAAO,EAAE,MAAM,EAAE;AACjD,QAAI,GAAG,GAAG,IAAI,cAAc,EAAE,CAAC;AAC/B,OAAG,CAAC,YAAY,GAAG,MAAM,CAAC;AAC1B,OAAG,CAAC,IAAI,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;AACrB,OAAG,CAAC,MAAM,GAAG,YAAY;AACrB,YAAI,GAAG,CAAC,MAAM,IAAI,GAAG,EAAE;AACnB,mBAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;SACzB,MAAM;AACH,kBAAM,CAAC,KAAK,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,CAAC;SACjC;KACJ,CAAC;AACF,OAAG,CAAC,OAAO,GAAG,YAAY;AACtB,cAAM,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC,CAAC;KAC7B,CAAC;AACF,OAAG,CAAC,IAAI,EAAE,CAAC;CACd,CAAC;;AAEF,IAAI,kBAAkB,GAAG,SAAS,kBAAkB,CAAC,OAAO,EAAE,KAAK,EAAE;AACjE,KAAC,CAAC,wBAAwB,CAAC,CAAC,KAAK,CAAC,UAAU,GAAG,OAAO,CAAC,GAAG,GAAG,OAAO,GAAG,MAAM,GAAG,OAAO,CAAC,SAAS,GAAG,OAAO,GAAG,MAAM,GAAG,OAAO,CAAC,QAAQ,GAAG,OAAO,GAAG,MAAM,GAAG,KAAK,GAAG,OAAO,GAAG,OAAO,CAAC,CAAC;CAC3L,CAAC;;AAEF,SAAS,OAAO,CAAC,MAAM,EAAE;AACrB,WAAO,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,UAAU,KAAK,EAAE,OAAO,EAAE;AACrD,eAAO,KAAK,GAAG,OAAO,CAAC;KAC1B,EAAE,CAAC,CAAC,GAAG,MAAM,CAAC,MAAM,CAAC,CAAC;CAC1B;;AAED,OAAO,CAAC,IAAI,GAAG,WAAW,EAAE,UAAU,QAAQ,EAAE;;AAE5C,KAAC,CAAC,UAAU,CAAC,CAAC,IAAI,EAAE,CAAC;AACrB,YAAQ,CAAC,IAAI,CAAC,UAAU,CAAC,EAAE,CAAC,EAAE;AAC1B,YAAI,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,GAAG,EAAE,OAAO,CAAC,CAAC,CAAC;AAC7B,YAAI,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,GAAG,EAAE,OAAO,CAAC,CAAC;AAC5B,eAAO,CAAC,CAAC;KACZ,CAAC,CAAC;AACH,SAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,QAAQ,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AACtC,YAAI,OAAO,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAC;AAC1B,YAAI,OAAO,CAAC,OAAO,CAAC,OAAO,KAAK,IAAI,EAAE;AAClC,mBAAO,CAAC,IAAI,GAAG,cAAc,GAAG,OAAO,CAAC,GAAG;AAC3C,sBAAU,MAAM,EAAE;AACd,kCAAkB,CAAC,OAAO,EAAE,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC;aAChD,EAAE,UAAU,KAAK,EAAE;;AAEhB,qBAAK,CAAC,eAAe,GAAG,KAAK,CAAC,CAAC;aAClC,CAAC,CAAC;SACN;KACJ;CACJ,EAAE,UAAU,KAAK,EAAE;;AAEhB,SAAK,CAAC,KAAK,CAAC,CAAC;CAChB,CAAC,CAAC","file":"app3-imperative-compiled-compiled.js","sourcesContent":["'use strict';\n\nvar HOST = 'http://localhost:8000';\n\nvar getJSON = function getJSON(url, resolve, reject) {\n    var req = new XMLHttpRequest();\n    req.responseType = 'json';\n    req.open('GET', url);\n    req.onload = function () {\n        if (req.status == 200) {\n            resolve(req.response);\n        } else {\n            reject(Error(req.statusText));\n        }\n    };\n    req.onerror = function () {\n        reject(Error('IO Error'));\n    };\n    req.send();\n};\n\nvar addStudentToRoster = function addStudentToRoster(student, grade) {\n    $('#studentRoster tr:last').after('<tr><td>' + student.ssn + '</td>' + '<td>' + student.firstname + '</td>' + '<td>' + student.lastname + '</td>' + '<td>' + grade + '</td>' + '</tr>');\n};\n\nfunction average(grades) {\n    return Math.ceil(grades.reduce(function (total, current) {\n        return total + current;\n    }, 0) / grades.length);\n}\n\ngetJSON(HOST + '/students', function (students) {\n    // #A\n    $('#spinner').hide();\n    students.sort(function (a, b) {\n        if (a.ssn < b.ssn) return -1;\n        if (a.ssn > b.ssn) return 1;\n        return 0;\n    });\n    for (var i = 0; i < students.length; i++) {\n        var student = students[i];\n        if (student.address.country === 'US') {\n            getJSON(HOST + '/grades?ssn=' + student.ssn, // #B\n            function (grades) {\n                addStudentToRoster(student, average(grades)); // #C\n            }, function (error) {\n                // #B\n                alert('Inside grades' + error);\n            });\n        }\n    }\n}, function (error) {\n    // #A\n    alert(error);\n});\n\n//# sourceMappingURL=app3-imperative-compiled.js.map"]}