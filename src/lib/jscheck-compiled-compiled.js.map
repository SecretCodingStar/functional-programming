{"version":3,"sources":["jscheck-compiled.js"],"names":[],"mappings":"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","file":"jscheck-compiled-compiled.js","sourcesContent":["// jscheck.js\n// Douglas Crockford\n// 2015-05-03\n\n// Public Domain\n\n// http://www.jscheck.org/\n\n/*global clearTimeout, setTimeout*/\n\n/*jslint for */\n\n/*property\n any, apply, args, array, boolean, call, charAt, charCodeAt, character,\n check, claim, classification, classifier, clear, concat, detail, exception,\n fail, falsy, floor, forEach, fromCharCode, group, integer, isArray, join,\n keys, length, literal, lost, map, name, number, object, ok, on_fail,\n on_lost, on_pass, on_report, on_result, one_of, pass, predicate, prototype,\n push, random, reduce, replace, reps, resolve, sequence, serial, signature,\n slice, sort, string, stringify, test, total, verdict\n */\n\n'use strict';\n\nvar JSC = (function () {\n    'use strict';\n\n    var all,\n        // The collection of all claims\n    _any,\n        // The generator of any value,\n    bottom = [false, null, undefined, '', 0, NaN],\n        _detail = 3,\n        // The current level of report detail\n    groups,\n        // The collection of named groups of claims\n    integer_prime = 1,\n        integer_sq_2 = 9,\n        integer_sqrt = 1,\n        now_group,\n        // The current group\n    _on_fail,\n        // The function that receives the fail cases\n    _on_lost,\n        // The function that receives the lost cases\n    _on_pass,\n        // The function that receives the pass cases\n    _on_report,\n        // The function that receives the reportage\n    _on_result,\n        // The function that receives the summary\n    reject = {},\n        _reps = 100,\n        // The number of cases to be tried per claim\n    slice = Array.prototype.slice,\n        unique,\n        // Case serial number\n\n    resolve = function resolve(value) {\n\n        // The resolve function takes a value. If that value is a function, then\n        // it is called to produce the return value.\n\n        return typeof value === 'function' ? value.apply(null, slice.call(arguments, 1)) : value;\n    },\n        _integer = function _integer(value, default_value) {\n        value = resolve(value);\n        return typeof value === 'number' ? Math.floor(value) : typeof value === 'string' ? value.charCodeAt(0) : default_value;\n    },\n        go = function go(func, value) {\n\n        // If value is truthy, then pass it to the func, ignoring any exceptions,\n        // especially if func is not actually a function.\n\n        if (value) {\n            try {\n                return func(value);\n            } catch (ignore) {}\n        }\n    },\n        jsc = {\n        any: function any() {\n            return jsc.one_of(_any);\n        },\n        array: function array(dimension, value) {\n            if (Array.isArray(dimension)) {\n                return function () {\n                    return dimension.map(resolve);\n                };\n            }\n            if (dimension === undefined) {\n                dimension = jsc.integer(4);\n            }\n            if (value === undefined) {\n                value = jsc.any();\n            }\n            return function () {\n                var i,\n                    n = resolve(dimension),\n                    result = [];\n                if (typeof n === 'number' && isFinite(n)) {\n                    for (i = 0; i < n; i += 1) {\n                        result.push(resolve(value, i));\n                    }\n                }\n                return result;\n            };\n        },\n        boolean: function boolean(bias) {\n\n            // A signature can contain a boolean specification. An optional bias parameter\n            // can be provided. If the bias is 0.25, then approximately a quarter of the\n            // booleans produced will be true.\n\n            if (typeof bias !== 'number') {\n                bias = 0.50;\n            }\n            return function () {\n                return Math.random() < bias;\n            };\n        },\n        character: function character(i, j) {\n            if (j === undefined) {\n                if (i === undefined) {\n                    i = 32;\n                    j = 127;\n                } else {\n                    return function () {\n                        var value = resolve(i);\n                        if (typeof value === 'number') {\n                            return String.fromCharCode(_integer(i));\n                        }\n                        if (typeof value === 'string') {\n                            return value.charAt(0);\n                        }\n                        return '?';\n                    };\n                }\n            }\n            var ji = jsc.integer(i, j);\n            return function () {\n                return String.fromCharCode(ji());\n            };\n        },\n        check: function check(claim, ms) {\n\n            // The check function optionally takes a claim function or the name of a group.\n            // The default is to check all claims. It returns the jsc object.\n            // The results will be provided to callback functions that are registered\n            // with the on_* methods.\n\n            var array,\n                cases = {},\n                complete = false,\n                nr_pending = 0,\n                serials = [],\n                timeout_id;\n\n            function generate_report() {\n\n                // Go through all of the cases. Identify the lost cases [on_lost]. Summarize\n                // the cases [on_result]. Produce a detailed report [on_report].\n\n                var class_fail,\n                    class_pass,\n                    class_lost,\n                    i = 0,\n                    lines = '',\n                    next_case,\n                    now_claim,\n                    nr_class = 0,\n                    nr_fail,\n                    nr_lost,\n                    nr_pass,\n                    report = '',\n                    the_case,\n                    the_class,\n                    total_fail = 0,\n                    total_lost = 0,\n                    total_pass = 0;\n\n                function generate_line(type, level) {\n                    if (_detail >= level) {\n                        lines += ' ' + type + ' [' + the_case.serial + '] ' + the_case.classification + JSON.stringify(the_case.args).replace(/^\\[/, '(').replace(/\\]$/, ')') + '\\n';\n                    }\n                }\n\n                function generate_class(key) {\n                    if (_detail >= 3 || class_fail[key] || class_lost[key]) {\n                        report += ' ' + key + ' pass ' + class_pass[key] + (class_fail[key] ? ' fail ' + class_fail[key] : '') + (class_lost[key] ? ' lost ' + class_lost[key] : '') + '\\n';\n                    }\n                }\n\n                if (cases) {\n                    if (timeout_id) {\n                        clearTimeout(timeout_id);\n                    }\n                    while (true) {\n                        next_case = cases[serials[i]];\n                        if (!next_case || next_case.claim !== now_claim) {\n                            if (now_claim) {\n                                if (_detail >= 1) {\n                                    report += the_case.name + ': ' + (nr_class ? nr_class + ' classifications, ' : '') + (nr_pass + nr_fail + nr_lost) + ' cases tested, ' + nr_pass + ' pass' + (nr_fail ? ', ' + nr_fail + ' fail' : '') + (nr_lost ? ', ' + nr_lost + ' lost' : '') + '\\n';\n                                    if (_detail >= 2) {\n                                        Object.keys(class_pass).sort().forEach(generate_class);\n                                        report += lines;\n                                    }\n                                }\n                                total_fail += nr_fail;\n                                total_lost += nr_lost;\n                                total_pass += nr_pass;\n                            }\n                            if (!next_case) {\n                                break;\n                            }\n                            nr_fail = 0;\n                            nr_lost = 0;\n                            nr_pass = 0;\n                            class_pass = {};\n                            class_fail = {};\n                            class_lost = {};\n                            lines = '';\n                        }\n                        the_case = next_case;\n                        i += 1;\n                        now_claim = the_case.claim;\n                        the_class = the_case.classification;\n                        if (the_class && typeof class_pass[the_class] !== 'number') {\n                            class_pass[the_class] = 0;\n                            class_fail[the_class] = 0;\n                            class_lost[the_class] = 0;\n                            nr_class += 1;\n                        }\n                        switch (the_case.pass) {\n                            case true:\n                                if (the_class) {\n                                    class_pass[the_class] += 1;\n                                }\n                                if (_detail >= 4) {\n                                    generate_line('Pass', 4);\n                                }\n                                nr_pass += 1;\n                                break;\n                            case false:\n                                if (the_class) {\n                                    class_fail[the_class] += 1;\n                                }\n                                generate_line('FAIL', 2);\n                                nr_fail += 1;\n                                break;\n                            default:\n                                if (the_class) {\n                                    class_lost[the_class] += 1;\n                                }\n                                generate_line('LOST', 2);\n                                nr_lost += 1;\n                                go(_on_lost, the_case);\n                        }\n                    }\n                    if (typeof claim === 'string' && _detail >= 1) {\n                        report = 'Group ' + claim + '\\n\\n' + report;\n                    }\n                    report += '\\nTotal pass ' + total_pass + (total_fail ? ', fail ' + total_fail : '') + (total_lost ? ', lost ' + total_lost : '') + '\\n';\n                    go(_on_result, {\n                        pass: total_pass,\n                        fail: total_fail,\n                        lost: total_lost,\n                        total: total_pass + total_fail + total_lost,\n                        ok: total_lost === 0 && total_fail === 0 && total_pass > 0\n                    });\n                    go(_on_report, report);\n                }\n                cases = null;\n            }\n\n            function register(serial, value) {\n\n                // This function is used by a claim function to register a new case, and it\n                // is used by a case to report a verdict. The two uses are correlated by the\n                // serial number.\n\n                // If the cases object is gone, then late arriving lost result should be\n                // ignored.\n\n                var the_case;\n                if (cases) {\n                    the_case = cases[serial];\n\n                    // If the serial number has not been seen, then register a new case.\n                    // The case is added to the cases collection. The serial number is added to\n                    // the serials collection. The number of pending cases is increased.\n\n                    if (the_case === undefined) {\n                        cases[serial] = value;\n                        serials.push(serial);\n                        nr_pending += 1;\n                    } else {\n\n                        // An existing case now gets its verdict. If it unexpectedly already has a\n                        // result, then throw an exception. Each case should have only one result.\n\n                        if (the_case.pass !== undefined) {\n                            throw the_case;\n                        }\n\n                        // If the result is a boolean, then the case is updated and sent to on_pass\n                        // or on_fail.\n\n                        if (value === true) {\n                            the_case.pass = true;\n                            go(_on_pass, the_case);\n                        } else if (value === false) {\n                            the_case.pass = false;\n                            go(_on_fail, the_case);\n                        } else {\n\n                            // Any other result indicates that the case was lost. Assume that the value\n                            // is an exception object.\n\n                            the_case.pass = null;\n                            the_case.exception = value;\n                        }\n\n                        // This case is no longer pending. If all of the cases have been generated and\n                        // given results, then generate the result.\n\n                        nr_pending -= 1;\n                        if (nr_pending <= 0 && complete) {\n                            generate_report();\n                        }\n                    }\n                }\n                return value;\n            }\n\n            // Make an array of the claims to be checked.\n\n            if (typeof claim === 'function') {\n                array = [claim];\n            } else if (typeof claim === 'string') {\n                array = groups[claim];\n                if (!Array.isArray(array)) {\n                    throw new Error('Bad group ' + claim);\n                }\n            } else {\n                array = all;\n                ms = ms || claim;\n            }\n            unique = 0;\n\n            // Process each claim.\n\n            array.forEach(function (claim) {\n                var at_most = _reps * 10,\n                    counter = 0,\n                    i;\n                integer_sq_2 = 9;\n                integer_sqrt = 1;\n                integer_prime = 1;\n\n                // Loop over the generation and testing of cases.\n\n                for (i = 0; counter < _reps && i < at_most; i += 1) {\n                    if (claim(register) !== reject) {\n                        counter += 1;\n                    }\n                }\n            });\n\n            // All of the case predicates have been called.\n\n            complete = true;\n\n            // If all of the cases have returned verdicts, then generate the report.\n\n            if (nr_pending <= 0) {\n                generate_report();\n\n                // Otherwise, start the timer.\n            } else if (ms > 0) {\n                timeout_id = setTimeout(generate_report, ms);\n            }\n            return jsc;\n        },\n        claim: function claim(name, predicate, signature, classifier, dont) {\n\n            // A claim consists of\n            //  a unique name which is displayed in the the report,\n            //  a predicate function which exercises the claim, and that will return true\n            //      if the claim holds,\n            //  a function signature for the function expressed as an array of type\n            //      specifiers or expressions,\n            //  an optional classifier function, which takes the same arguments as the\n            //      property function, and returns a string for classifying the subsets, or\n            //      false if the predicate should not be given this set of generated\n            //      arguments.\n\n            // A function is returned, which can be called by the check function.\n            // That function will also be deposited in the set of all claims.\n            // If a group name has been set, then the claim will also be deposited\n            // in the group.\n\n            var group = now_group;\n            if (!Array.isArray(signature)) {\n                signature = [signature];\n            }\n\n            function claim(register) {\n                var args = signature.map(function (value) {\n                    return resolve(value);\n                }),\n                    classification = '',\n                    serial,\n                    verdict;\n\n                // If an classifier function was provided, then call it to obtain a\n                // classification. If the classification is not a string, then reject the\n                // case.\n\n                if (typeof classifier === 'function') {\n                    classification = classifier.apply(args, args);\n                    if (typeof classification !== 'string') {\n                        return reject;\n                    }\n                }\n\n                // Create a unique serial number for this case.\n\n                unique += 1;\n                serial = unique;\n\n                // Create a verdict function that wraps the register function.\n\n                verdict = function (result) {\n                    if (result === undefined) {\n                        result = null;\n                    }\n                    return register(serial, result);\n                };\n\n                // Register an object that represents this case.\n\n                register(serial, {\n                    args: args,\n                    claim: claim,\n                    classification: classification,\n                    classifier: classifier,\n                    group: group,\n                    name: name,\n                    pass: undefined,\n                    predicate: predicate,\n                    serial: serial,\n                    signature: signature,\n                    verdict: verdict\n                });\n\n                // Call the predicate, giving it the verdict function and all of the case's\n                // arguments. The predicate must use the verdict callback to signal the result\n                // of the case.\n\n                try {\n                    return predicate.apply(args, [verdict].concat(args));\n\n                    // If the predicate throws, then this is a lost case. Use the exception\n                    // as the verdict, but don't allow the exception to be a boolean, because that\n                    // would be confusing.\n                } catch (e) {\n                    return verdict(typeof e === 'boolean' ? null : e);\n                }\n            }\n            if (dont !== true) {\n\n                // If there is a group active, then add this claim to the group.\n                // (See the group method.)\n\n                if (group) {\n                    if (!Array.isArray(groups[group])) {\n                        groups[group] = [claim];\n                    } else {\n                        groups[group].push(claim);\n                    }\n                }\n\n                // Add this claim to the set of all claims.\n\n                all.push(claim);\n            }\n            return claim;\n        },\n        clear: function clear() {\n            all = [];\n            groups = {};\n            now_group = '';\n            return jsc;\n        },\n        detail: function detail(level) {\n            _detail = level;\n            return jsc;\n        },\n        falsy: function falsy() {\n            return jsc.one_of(bottom);\n        },\n        group: function group(name) {\n            now_group = name || '';\n            return jsc;\n        },\n        integer: function integer(i, j) {\n            if (i === undefined) {\n                return function () {\n                    var exclude, factor;\n                    do {\n                        integer_prime += 2;\n                        exclude = false;\n                        if (integer_prime >= integer_sq_2) {\n                            exclude = true;\n                            integer_sqrt += 2;\n                            integer_sq_2 = (integer_sqrt + 2) * (integer_sqrt + 2);\n                        }\n                        for (factor = 3; !exclude && factor <= integer_sqrt; factor += 2) {\n                            exclude = integer_prime % factor === 0;\n                        }\n                    } while (exclude);\n                    return integer_prime;\n                };\n            }\n            i = _integer(i, 1);\n            j = _integer(j, 1);\n            if (j === undefined) {\n                j = i;\n                i = 1;\n            }\n            if (i === j) {\n                return i;\n            }\n            if (i > j) {\n                var t = i;\n                i = j;\n                j = t;\n            }\n            return function () {\n                return Math.floor(Math.random() * (j + 1 - i) + i);\n            };\n        },\n        literal: function literal(value) {\n            return function () {\n                return value;\n            };\n        },\n        number: function number(i, j) {\n            i = +i || 0;\n            j = +j;\n            if (!isFinite(j)) {\n                j = i || 1;\n                i = 0;\n            }\n            if (i === j) {\n                return i;\n            }\n            if (i > j) {\n                var t = i;\n                i = j;\n                j = t;\n            }\n            return function () {\n                return Math.random() * (j - i) + i;\n            };\n        },\n        object: function object(_object, value) {\n            if (_object === undefined) {\n                _object = jsc.integer(1, 4);\n            }\n            return function () {\n                var gen,\n                    i,\n                    keys,\n                    result = {},\n                    string,\n                    values;\n                keys = resolve(_object);\n                if (typeof keys === 'number') {\n                    string = jsc.string();\n                    gen = jsc.any();\n                    for (i = 0; i < keys; i += 1) {\n                        result[string()] = gen();\n                    }\n                    return result;\n                }\n                if (value === undefined) {\n                    if (keys && typeof keys === 'object') {\n                        Object.keys(_object).forEach(function (key) {\n                            result[key] = resolve(keys[key]);\n                        });\n                        return result;\n                    }\n                } else {\n                    values = resolve(value);\n                    if (Array.isArray(keys)) {\n                        keys.forEach(function (key, i) {\n                            result[key] = resolve(Array.isArray(values) ? values[i % values.length] : value, i);\n                        });\n                        return result;\n                    }\n                }\n                return null;\n            };\n        },\n        one_of: function one_of(array, weights) {\n\n            // The one_of specifier has two signatures.\n\n            //  one_of(array)\n            //      One element is taken from the array and resolved. The elements are\n            //      selected randomly with equal probabilities.\n\n            // one_of(array, weights)\n            //      The two arguments are both arrays with equal lengths. The larger\n            //      a weight, the more likely an element will be selected.\n\n            if (typeof array === 'string') {\n                return function () {\n                    return array.charAt(Math.floor(Math.random() * array.length));\n                };\n            }\n            if (Array.isArray(array) && array.length > 0) {\n                if (!Array.isArray(weights)) {\n                    return function () {\n                        return resolve(array[Math.floor(Math.random() * array.length)]);\n                    };\n                }\n                if (array.length === weights.length) {\n                    var base = 0,\n                        n = array.length - 1,\n                        total = weights.reduce(function (a, b) {\n                        return a + b;\n                    }, 0),\n                        list = weights.map(function (value) {\n                        base += value / total;\n                        return base;\n                    });\n                    return function () {\n                        var i,\n                            x = Math.random();\n                        for (i = 0; i < n; i += 1) {\n                            if (x < list[i]) {\n                                return resolve(array[i]);\n                            }\n                        }\n                        return resolve(array[n]);\n                    };\n                }\n            }\n            return null;\n        },\n        on_fail: function on_fail(func) {\n            _on_fail = func;\n            return jsc;\n        },\n        on_lost: function on_lost(func) {\n            _on_lost = func;\n            return jsc;\n        },\n        on_pass: function on_pass(func) {\n            _on_pass = func;\n            return jsc;\n        },\n        on_report: function on_report(func) {\n            _on_report = func;\n            return jsc;\n        },\n        on_result: function on_result(func) {\n            _on_result = func;\n            return jsc;\n        },\n        reps: function reps(number) {\n            _reps = number;\n            return jsc;\n        },\n        resolve: resolve,\n        sequence: function sequence(seq) {\n            if (seq === undefined) {\n                return function () {\n                    return unique + 1;\n                };\n            }\n            var array = arguments.length > 1 ? slice.call(arguments, 0) : seq,\n                i = -1;\n            return function () {\n                i += 1;\n                if (i >= array.length) {\n                    i = 0;\n                }\n                return resolve(array[i]);\n            };\n        },\n        string: function string(_x) {\n            var _arguments = arguments;\n            var _again = true;\n\n            _function: while (_again) {\n                var value = _x;\n                i = length = pieces = undefined;\n\n                var pair = function pair(dimension, value) {\n                    if (i + 1 === length) {\n                        return function () {\n                            return JSON.stringify(resolve(dimension));\n                        };\n                    }\n                    var ja = jsc.array(dimension, value);\n                    return function () {\n                        return ja().join('');\n                    };\n                };\n\n                _again = false;\n\n                var i,\n                    length = _arguments.length,\n                    pieces = [];\n\n                if (value === undefined || typeof value === 'boolean') {\n                    _arguments = [_x = jsc.integer(10), jsc.character(value)];\n                    _again = true;\n                    continue _function;\n                }\n\n                for (i = 0; i < length; i += 2) {\n                    pieces.push(pair(_arguments[i], _arguments[i + 1]));\n                }\n                return function () {\n                    return pieces.map(resolve).join('');\n                };\n            }\n        },\n        test: function test(name, predicate, signature, classifier, ms) {\n            return JSC.check(JSC.claim(name, predicate, signature, classifier, true), ms);\n        }\n    };\n    _any = [jsc.falsy(), jsc.integer(), jsc.number(), jsc.string(), true, Infinity, -Infinity];\n    return jsc.clear();\n})();\n\n//# sourceMappingURL=jscheck-compiled.js.map"]}